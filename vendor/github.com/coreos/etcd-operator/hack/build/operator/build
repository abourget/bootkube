#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

if ! which go > /dev/null; then
	echo "golang needs to be installed"
	exit 1
fi

if ! which docker > /dev/null; then
	echo "docker needs to be installed"
	exit 1
fi

: ${IMAGE:?"Need to set IMAGE, e.g. gcr.io/coreos-k8s-scale-testing/etcd-operator"}

bin_dir="_output/bin"
mkdir -p ${bin_dir} || true


ldKVPairs="github.com/coreos/etcd-operator/pkg/util/k8sutil.BackupImage=${IMAGE}"
go_ldflags="-X ${ldKVPairs}"

CGO_ENABLED=0 go build -installsuffix cgo -ldflags "$go_ldflags" \
	-o ${bin_dir}/etcd-operator ./cmd/operator/main.go
CGO_ENABLED=0 go build -installsuffix cgo -ldflags "$go_ldflags" \
	-o ${bin_dir}/etcd-backup ./cmd/backup/main.go


docker build --tag "${IMAGE}" -f hack/build/operator/Dockerfile .
# For gcr users, do "gcloud docker -a" to have access.
docker push "${IMAGE}"
